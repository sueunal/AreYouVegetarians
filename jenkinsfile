pipeline {
    agent any

    environment {
        PROJECT_NAME = "AreYouVegetarians"
        SCHEME_NAME  = "AreYouVegetarians"
        SIMULATOR = "platform=iOS Simulator,name=iPhone 15 Pro,OS=18.3.1"

    }


    stages {
        stage('📥 Checkout') {
            steps {
                echo 'Git 저장소에서 프로젝트 코드 가져오기'
                checkout scm
            }
        }

        stage('🛠️ Build') {
            steps {
                echo 'Xcode 프로젝트 빌드 시작'
                sh """
                    cd ${PROJECT_NAME}
                    xcodebuild clean -project ${PROJECT_NAME}.xcodeproj -scheme ${SCHEME_NAME} -configuration Debug
                """
            }

        }
	stage('Unit Test') {
            steps {
                sh '''
                xcodebuild \
                    -workspace $WORKSPACE \
                    -scheme $SCHEME \
                    -destination "$DESTINATION" \
                    -sdk iphonesimulator \
                    -enableCodeCoverage YES \
                    clean test | tee xcodebuild.log | xcpretty -r junit -o build/reports/junit.xml
                '''
            }
            post {
                always {
                    junit 'build/reports/junit.xml' // 테스트 결과를 Jenkins에 리포트
                }
            }
        }

	stage('UI Test') {
            steps {
                sh '''
                xcodebuild \
                    -workspace $WORKSPACE \
                    -scheme $SCHEME \
                    -destination "$DESTINATION" \
                    -sdk iphonesimulator \
                    -only-testing:MyAppUITests \
                    clean test | tee xcodebuild_ui.log | xcpretty -r junit -o build/reports/ui_junit.xml
                '''
            }
            post {
                always {
                    junit 'build/reports/ui_junit.xml'
                }
            }
        }

        stage('🧪 Test') {
            steps {
                echo 'Xcode 테스트 실행'
                sh """
                    cd ${PROJECT_NAME}
                    xcodebuild test -project ${PROJECT_NAME}.xcodeproj -scheme ${SCHEME_NAME} -destination '${SIMULATOR}'
                """
            }
        }

        stage('✅ Done') {
            steps {
                echo '✅ CI/CD 완료!'
            }
        }
    }

    post {
        failure {
            echo '🚨 빌드 또는 테스트 단계에서 실패가 발생했습니다.'
        }
    }
}

